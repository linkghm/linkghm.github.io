[{"content":"环境变量的种类 首先是linux下环境变量的种类：\n /etc/profile /etc/environment ~/.bash_profile ~/.bashrc 1~2是全局变量，3~4是用户个人的变量  具体配置 个人用户配置方法如下： vim ~/.bashrc\r\nexport PATH=\u0026quot;/opt/anaconda/bin:$PATH\u0026quot;\r\n刷新环境变量\nsource .bashrc \n检查是否起作用：\nconda\r\n清华源设置 清华源：(https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/)[https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/]\n后记 如果说，上述环境创建好后（base），再新创建一个虚拟环境。 conda会提示进行conda init操作，等下次再连上服务器可能会发现，conda环境消失了。 这是因为conda init会把bashrc之前的环境注释掉，只需要：\n  重新编辑.bashrc vim ~/.bashrc \n  将下方的注释取消即可。\n  export PATH=\u0026quot;/opt/anaconda/bin:$PATH\u0026quot;\r\n","date":"2021-02-23T00:00:00Z","permalink":"https://guohuimin.top/p/conda-with-linux/","title":"Anaconda+Linux个人用户配置"},{"content":"转眼之间就来到了2021，凌晨宿舍写笔记的时候，习惯性把上一条时间戳复制了下来，突然发现已经是2021了，那一刻内心才有了一丝触动。\n可能是最近一段时间总熬夜，感觉自己的情感上变得比较迟钝，有时候也会很焦虑。跨年的朋友圈总是那么热闹，但是内心却怎么也高兴不起来。没有什么特别的烦恼，只是情绪很难被周围欢快的氛围调动起来。31号下午看到了博士的拟录取结果，用家人的话说也算是完美的收官。想想自己过去一年的生活，经历了很多，但仿佛也是一瞬间的事情。说起来惭愧，研究生三年只有2019年年初的时候，写了一个简单的总结，当时充满了对未来生活的无限激情，再看看现在的自己顿时觉得好失败[哭笑]。\n不管如何，逝去的时光无法追回，还是要打起精神继续干活，下面把自己过去一年的生活做个综述流水账，既算是总结也是对自己的反思。\n2019.12 -2020.2 这段时间忙着处理医院的数据，虽然拿到了原始数据，但是没有经过清洗，根本没有办法看。快过年的时候，整个学校基本上没有什么学生了，也只剩下研究生博士生苦逼的在干活，实验室的暖气根本难以维持室内的温度，坐在工位上时间久了双脚冰冰凉。从2019年10月份到年末，好在是谷同学不负众望拿下了博士入场券，加上数据到位，自己的心情还是比较好的。但接下来就是自己的下一步发展方向，虽然自己是一个极度逃避现实的人，等到现实摆在眼前还是得硬着头皮上。\n2020.3 – 2020.5 这段时间因为疫情，只能在家干活。一开始的动力非常的好，托福课程还有单词一直非常努力的在看，科研上虽然数据是真的难清理，好在加班加点整理完毕。但是在家时间久了动力逐渐消失，很长一段时间内，直播+各种电视剧完全充斥了自己的生活。随着疫情的加重，托福GRE考试完全停摆，本来就不自信的自己更觉得未来非常的渺茫。没有论文，没有语言成绩，我用什么去争取国外的博士坑位，再加上国外疫情肆虐，真的是一言难尽。那段时间和家人聊了很多，也咨询了导师，最后还是决定留下来。其实留下来也算是意料之中的事情，很大程度上和自己的性格有关系。一方面，我极度渴望革新自己，另一方面，我又恐惧未知。这两个矛盾的心情，往往最后博弈的结果是保守，选择留下来，选择安逸。\n2020.6-2020.10 确定了大致的方向，自己也不再彷徨，偶尔会患得患失，但是现实已经不允许我顾虑太多。这段时间前一小段在家里还是继续半干活半摸鱼，后边为了脱离舒适圈，选择去苏州换个新的环境改变一下心境。新国大苏研院位于苏州的工业园区，这个时候我是真的想吐槽一下东大，看看人家的周围建设。这一片周围都是很多高校的研究院，旁边是东南的软件学院研究院，还有山东大学，南京大学等学校的研究院。另外西交利物浦和苏州大学的一个校区也在这一片，不得不说南方的环境要比北方强太多了。每天早上和同学必然是巴比包子（猪肉最爱，可能还会要个馅饼），后来听闻巴比上市，我开玩笑能上市我们发挥了重要的作用。在苏州的生活记忆还是很深刻的，第一次在南方生活这么久，苏州的景点也逛了很多，吃到了很多美食（各种包子，哈哈，还有绿豆汤，鲜肉月饼，各种面等等），参加了几个博览会。所以，有机会还是应该写一篇文章回忆一下苏州生活。9月末，我们从苏州返回学校，但不幸的是当时学校没有返校审批了，无奈只能在同学家借住了三四天，后来想想不是个长久办法，打算还是回家。\n2020.11 -2020.12 返回学校准备博士考试，度过了难熬的这段时间，最后终于在2020年最后一天看到了拟录取结果。\n2020年到现在，疫情还在肆虐，希望自己能收拾好心情，从新出发，踏踏实实走好接下来的每一天。\n","date":"2021-01-01T00:00:00Z","image":"https://guohuimin.top/p/2021/wallhaven-73mzme_hu1fa3956b0a6ff34acfb50f393c7672c4_1415623_120x120_fill_q75_box_smart1.jpg","permalink":"https://guohuimin.top/p/2021/","title":"2020年度总结"},{"content":"由于环境经常出现问题，目前关于深度学习的一些操作都放在容器中进行。\n但是很多时候，需要在本机进行调试，随后才会在服务器上进行训练，针对这个问题我们需要在本机创建容器进行调试。\n1 首先是安装容器，这里推荐的深度学习的容器为ufoym/deepo docker hub：https://hub.docker.com/r/ufoym/deepo\ngithub：https://www.github.com/ufoym/deepo\n提示：可以将docker的服务开机启动。\n2 运行容器请参考官方文档 3 容器创建后，正常是需要sudo权限进行操作，但是这样会导致vscode的dokcer插件无法检测到运行的dokcer服务，如下所示： connect EACCES /var/run/docker.sock\n4 docker官方针对这个情况有具体的解决步骤： https://docs.docker.com/engine/install/linux-postinstall/\n sudo groupadd docker\rsudo usermod -aG docker $USER\rnewgrp docker （linux下，刷新上述的更新；稳妥起见可以重启一下电脑）\r5 打开terminal，测试 docker run hello-world\n如果可以正常启动服务，说明已经将当前用户添加到了docker组\n6 打开vscode，可以看到左侧docker插件中已经显示出运行的容器了。右键attach vscode就可以在vscode中打开容器环境进行操作。 附：目前发现的一个问题是，打开容器后cpu的占用率非常高，但是还不知道怎么解决。\n","date":"2020-08-29T00:00:00Z","permalink":"https://guohuimin.top/p/vscode-with-docker/","title":"vscode + docker in the local environment"},{"content":"本文仅作个人记录，如有不同请Google。\n前提：树莓派安装在局域网内\n1 安装nmap yay -S nmap\n2 查看当前主机的ip ip addr\n3 得到局域网的ip网段 e.g. 192.168.X.X\n4 使用nmap找到树莓派 nmap -sP 192.168.X.0/22\n5 ssh连接树莓派（我的名字是ubuntu） ssh ubuntu@192.168.X.Y\n","date":"2020-08-05T00:00:00Z","permalink":"https://guohuimin.top/p/find-pi-without-monitor/","title":"Find pi without the monitor"},{"content":"Github Issue：https://github.com/countstarlight/deepin-wine-wechat-arch/issues/42\n具体解决办法（摘自Issue，作为个人记录）：\nyay -S deepin-wine5\rsudo vim /opt/deepinwine/apps/Deepin-WeChat/run.sh WINE_CMD\rWINE_CMD=\u0026quot;wine\u0026quot; --\u0026gt; WINE_CMD=\u0026quot;deepin-wine5\u0026quot; (具体修改地方)\rkill wine以及wechat进程，重启wechat即可\r","date":"2020-07-28T00:00:00Z","permalink":"https://guohuimin.top/p/deepin-wechat-sending-images-problem/","title":"Deepin-wechat无法发送图"},{"content":"1 问题再现： 最近发现electron-ssr不能启动了，经过查找是软件依赖的electron版本出现问题。\n/usr/bin/electron-ssr\relectron4: error while loading shared libraries: libre2.so.7: cannot open shared object file: No such file or directory\r个人当前的系统信息如下：\nLinux ghmarch 5.7.10-arch1-1 #1 SMP PREEMPT Wed, 22 Jul 2020 19:57:42 +0000 x86_64 GNU/Linux\n2 原因分析： cat /usr/bin/electron-ssr\n#!/bin/bash\rexec electron4 /usr/share/electron-ssr/app.asar \u0026quot;$@\u0026quot;\r可以看到electron-ssr使用的是electron4，应该是electron更新后将libre2.so相关的库也进行了更新。但是这个项目已经被作者废弃了，所以需要我们自己更新启动脚本。\n3 具体解决办法： sudo vim /usr/bin/electron-ssr\n#!/bin/bash\rexec electron4 /usr/share/electron-ssr/app.asar \u0026quot;$@\u0026quot;\r更改为\n#!/bin/bash\rexec electron /usr/share/electron-ssr/app.asar \u0026quot;$@\u0026quot;\r4 重新启动即可 ","date":"2020-07-27T00:00:00Z","permalink":"https://guohuimin.top/p/archlinux-electron-ssr/","title":"ArchLinux下Electron-ssr启动问题"},{"content":"1 首先确认自己使用的vim版本： vim --version | grep clipboard\r-clipboard +jumplist +popupwin +user_commands\r+ex_extra -mouse_jsbterm -sun_workshop +xterm_clipboard\r如果在clipboard前边出现了-，表示当前的vim不支持复制粘贴到系统剪贴板，也就是说不可以将文本里边的内容直接粘贴出来。\n2 解决办法： 2.1 安装gvim yay -R vim # 卸载原始的vim\ryay -S gvim # 安装gvim\r2.2 检查vim版本信息 vim --version | grep clipboard\r+clipboard +jumplist +popupwin +user_commands\r+ex_extra -mouse_jsbterm -sun_workshop +xterm_clipboard\r2.3× 个人是在做完以上的步骤后，还是出现不能复制粘贴的问题，因此需要进一步配置vim： 这里是直接对vim的全局配置进行更改，个人用户更改请Google。\nsudo vim /etc/vimrc\n在最下边加入\nset clipboard=unnamedplus\n关于unnamed和unnamedplus，可以参考 StackOverFlow\n2.4 +寄存器是和系统剪贴板关联的寄存器，我们选择要复制的文本后，+y就可以复制到+寄存器。 输入:reg可以看到复制下来的内容。\n","date":"2020-07-27T00:00:00Z","permalink":"https://guohuimin.top/p/vim-clipboard-problem/","title":"Vim复制粘贴到寄存器"},{"content":"1 What is frp? （摘自项目README） frp is a fast reverse proxy to help you expose a local server behind a NAT or firewall to the Internet. As of now, it supports TCP and UDP, as well as HTTP and HTTPS protocols, where requests can be forwarded to internal services by domain name.\nfrp项目地址：https://github.com/fatedier/frp\n2 注：本文是基于linux的配置 release: https://github.com/fatedier/frp/releases\n3 无stcp： Server： frps.ini\n[common]\rbind_port = 7000 # Client和Server通信的端口\rrun the server:\r./frps -c ./frps.ini\rClient：\rfrpc.ini配置\r[common]\rserver_addr = aaa.bbb.ccc.ddd # Server的ip地址\rserver_port = 7000 # Client和Server通信的端口\r[tcp_port]\rtype = tcp\rlocal_ip = 127.0.0.1\rlocal_port = 6006 # Client服务的端口\rremote_port = 6006 # Server暴露的端口\rrun the Client: ./frpc -c ./frpc.ini\n4 有stcp： 具体逻辑：Client端1–\u0026gt;frps–\u0026gt;Client端2，相当于公网服务器充当了一个媒介。例如，我在Client1开启了tensorboard，端口是6006。通过公网服务器，我可以在本地的电脑上访问处于内网的Client1的6006端口。\n4.1 Server： frps.ini\n[common]\rbind_port = 7000\rrun the server: ./frps -c ./frps.ini\n4.2 Client1： frpc.ini\n[common]\rserver_addr = aaa.bbb.ccc.ddd # Server的ip地址\rserver_port = 7000\r[secret_tcp]\r# If the type is secret tcp, remote_port is useless\r# Who want to connect local port should deploy another frpc with stcp proxy and role is visitor\rtype = stcp\r# sk used for authentication for visitors\rsk = abcdefg # sk要和Client2相同\rlocal_ip = 127.0.0.1 # Client1的访问地址\rlocal_port = 6006 # Client1的访问端口\ruse_encryption = false\ruse_compression = false\rrun the Client1: ./frpc -c ./frpc.ini\n4.3 Client2： frpc.ini\n[common]\rserver_addr = aaa.bbb.ccc.ddd\rserver_port = 7000\r# user of frpc should be same in both stcp server and stcp visitor\r[secret_tcp_visitor]\r# frpc role visitor -\u0026gt; frps -\u0026gt; frpc role server\rrole = visitor\rtype = stcp\r# the server name you want to visitor\rserver_name = secret_tcp\rsk = abcdefg # sk要和Client1相同\r# connect this address to visitor stcp server\rbind_addr = 127.0.0.1 # Client2的访问地址\rbind_port = 6006 # Client2的访问端口\ruse_encryption = false\ruse_compression = false\rrun the Client2: ./frpc -c ./frpc.ini\n5 其他小的细节 5.1 如果出现下述错误，表示服务器的防火墙没有关闭（也可能是服务器的安全组没有设置）： login to server failed: dial tcp no route to host\n解决办法：\nfirewall-cmd --state (出现running，表示在运行)\rsystemctl stop firewalld.service\r5.2 防火墙的相关命令 启动：# systemctl start firewalld\r查看状态：# systemctl status firewalld 或者 firewall-cmd –state\r停止：# systemctl disable firewalld\r禁用：# systemctl stop firewalld\r重启：#systemctl restart firewalld\r永久的开放需要的端口\rsudo firewall-cmd --zone=public --add-port=7000/tcp --permanent\rsudo firewall-cmd --reload //重载生效刚才的端口设置\r6 最后友情提示： 注意端口安全，防范风险，避免不必要的麻烦 🙂\n","date":"2020-07-21T00:00:00Z","permalink":"https://guohuimin.top/p/frp/","title":"frp的使用"},{"content":"在进行git push的时候，总是会提示输入github帐号和密码。\n原因是在github创建repo后，本地工程上传到github使用的是https协议，因此会有上述的问题。\n具体解决办法：\n1 在当前工程保存帐号密码： vim .git-credentials\nhttps://{username}:{password}@github.com\ngit config --global credential.helper store\n2 直接修改当前工程.git的配置 前提是已经将本地的public key保存在了github\nvim .git/config\n[remote \u0026quot;origin\u0026quot;]\rurl = 这里粘贴github上的ssh链接\r","date":"2020-07-21T00:00:00Z","permalink":"https://guohuimin.top/p/git-push-cancel-password/","title":"git push取消密码"},{"content":"主要针对yay安装或者更新包，其余情况可以使用proxychains。\n终端结束，代理结束\nhttp 代理：\nexport http=http://127.0.0.1:1080 export https=http://127.0.0.1:1080\nsocket 代理：\nexport http_proxy=socks5://127.0.0.1:1080 export https_proxy=socks5://127.0.0.1:1080\n","date":"2020-07-21T00:00:00Z","permalink":"https://guohuimin.top/p/linux-proxy/","title":"Linux终端代理"},{"content":"1 新建volume映射文件夹 mkdir -p /opt/jupyterhub/jupyterhub\nmkdir -p /opt/jupyterhub/home\n2 运行容器 docker run -p 8000:8000 -d --name jupyterhub -v /opt/jupyterhub/jupyterhub:/srv/jupyterhub -v /opt/jupyterhub/home:/home --restart=always jupyterhub/jupyterhub jupyterhub\r3 登陆docker 容器 docker exec -it jupyterhub bash\n4 安装notebook pip install notebook --upgrade -i https://pypi.tuna.tsinghua.edu.cn/simple\n6 添加用户 useradd jupyterhub\npasswd jupyterhub\n7 退出交互界面 （ctrl + p + q） sudo docker ps -a 查看容器运行状态\n8 进入Jupyterhub localhost:8000\n","date":"2020-07-13T00:00:00Z","permalink":"https://guohuimin.top/p/docker-install-jupyterhub/","title":"Docker安装Jupyterhub"},{"content":"挑战 机遇 努力\n","date":"2020-03-03T14:32:36Z","image":"https://guohuimin.top/p/2020/campus_hu62565abf3f7fe04e1d66731916a49580_878627_120x120_fill_q75_box_smart1.jpg","permalink":"https://guohuimin.top/p/2020/","title":"2020"},{"content":"回顾 不知不觉2019年都来了，之前一直想记录下，奈何自己实在是太忙（懒），趁着晚上还有精神更新一波。\n回顾2018年，自己经历了考研，毕业，异地以及现在忙碌的研究生生活。平时的课程上虽然做不到如鱼得水，但也是没有什么后悔，毕竟自己确实很上心地在学习了。\n变化 要说自己身上发生的变化，我觉得可以说这么几个吧：\n 身体：从3月份的接近190斤减肥到160多斤，算的上意志坚定地在减肥了吧（哭笑） 心态：谈不上有什么变化吧，依旧玻璃心。。需要继续成熟起来 知识：这个和标题比较切合，知识真的充满了魅力。今天晚上看了别人总结的CS231n的材料。感觉国外的课程知识体系真的好，循序渐进，特别有不断学习的动力。都在说这是个信息爆炸的时代，确实，但是信息实在是太多了，良莠不齐，能找到一份好的资料至关重要。一直来我觉得自己学习能力很差，学习东西很慢，现在想想其实很大一部时间被我安排在寻找资料身上，并且被各种资料疯狂的占用。所以这个问题亟待解决，一定要加强自己的信息寻找能力。 目标：目标这个词放在变化来讲好像有点不伦不类的，其实对自己而言再合适不过了。18年年初的目标，18年中期的目标，18年年末的目标以及新一年的目标有没有发生变化，值得自己思考。自己是一个容易受到外界干扰的人，一直想读博，但是这个目标貌似一直受到了各种现实情况的干扰。最初的想法确实是觉得博士代表着更高的平台，更好的发展空间，现在想想如果没有真的热爱，前边那些功利性的东西怎么能实现。更别说即使热爱还不一定能达到，所以还是需要不断的摸索，不断的思考意义。但是大致上，我还是意志比较坚定，目前对我来说只是需要不断沉淀，不断坚定自己的想法。  2019 不想说什么特别的愿望，毕竟我们连自己都无法掌控，只是希望能踏踏实实经营好生活，永远对生活充满激情。\n","date":"2019-01-05T01:23:07Z","permalink":"https://guohuimin.top/p/power-of-knowledge/","title":"power of knowledge"},{"content":"计算机基础：  计算机系统\u0026mdash;《深入理解计算机系统》 算法\u0026mdash;《算法导论》 数据结构\u0026mdash;《数据结构-清华大学C》 Python\u0026mdash;《Python学习手册》 机器学习\u0026mdash;《Python机器学习》 操作系统\u0026mdash;《现代操作系统》 数据库\u0026mdash;《数据库系统基础教程》 C\u0026mdash;《The C Programming Language》 图像处理\u0026mdash;《数字图象处理》  数学基础：  线性代数 概率论 离散数学 数值分析  进阶：  深度学习框架 C++\u0026mdash;《C++ Primer》 计算机网络\u0026mdash;《tip/tcp》  ","date":"2018-09-23T23:51:15Z","permalink":"https://guohuimin.top/p/book-plan/","title":"计划读书清单"}]